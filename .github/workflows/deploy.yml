name: Deploy Lambda

on:
  push:
    branches:
      - main  # or your deployment branch
      - '**'  # Include all branches for testing

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Run Unit Tests
        run: |
          go test ./... -v
        env:
          GO_ENV: test

  deploy:
    name: Build & Deploy to Lambda
    runs-on: ubuntu-latest
    needs: test  # Ensure this job depends on the test job
    if: github.ref == 'refs/heads/main'  # Run only on the main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        run: |
          IMAGE_TAG=latest
          ECR_URI="${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          docker build -t "$ECR_URI" .
          docker push "$ECR_URI"
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

      - name: Update Lambda Function with New Image
        run: |
          aws lambda update-function-code \
            --function-name "$LAMBDA_FUNCTION_NAME" \
            --image-uri "$ECR_URI"